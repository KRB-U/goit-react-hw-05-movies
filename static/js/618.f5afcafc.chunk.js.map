{"version":3,"file":"static/js/618.f5afcafc.chunk.js","mappings":"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","sources":["components/pages/MovieDetails.styled.js","components/pages/MovieDetails.jsx","components/pages/NotFoundPage.jsx","helpers/API.js"],"sourcesContent":["import { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst LinkBtnBack = styled(Link)`\n  display: inline-block;\n  text-align: center;\n  white-space: nowrap;\n\n  font-weight: 400;\n  text-decoration: none;\n\n  vertical-align: middle;\n\n  border: 1px solid transparent;\n  padding: 0.375rem 0.75rem;\n\n  font-size: 1rem;\n\n  line-height: 1.5;\n\n  border-radius: 0.25rem;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,\n    border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  background-color: #f7e6d1;\n  border-color: #d3b8a7;\n\n  margin-bottom: 10px;\n\n  &:hover,\n  &:focus {\n    color: #6c4c33;\n    text-decoration: none;\n    background-color: #ffd9b3;\n    border-color: #ffaf5f;\n  }\n`;\n\nconst ContainerInfo = styled.div`\n  display: flex;\n  column-gap: 16px;\n`;\n// const ImgPosterContainer = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: center;\n//   align-items: center;\n// `;\n\nconst ImgPoster = styled.img`\n  display: block;\n\n  /* margin-right: 20px; */\n  max-width: 200px;\n`;\n\nconst TitleMovie = styled.h1`\n  font-size: 24px;\n  margin-bottom: 10px;\n`;\n\nconst UserScore = styled.p`\n  font-size: 16px;\n  margin-bottom: 10px;\n`;\n\nconst OverView = styled.h2`\n  margin-bottom: 10px;\n`;\nconst OverViewParagraph = styled.p`\n  width: 700px;\n  margin-bottom: 10px;\n`;\n\nconst Genres = styled.h2`\n  margin-bottom: 10px;\n`;\n\nconst GenresList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst GenresListItem = styled.li`\n  margin-bottom: 5px;\n`;\n\nconst AdditionalInfo = styled.h3`\n  display: flex;\n  align-items: center;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  padding: 10px;\n  margin-top: 20px;\n  font-weight: bold;\n`;\n\nconst AdditionalInfoList = styled.ul`\n  display: flex;\n  margin-top: 25px;\n\n  column-gap: 28px;\n`;\n\nconst AdditionalNavLink = styled(NavLink)`\n  text-decoration: none;\n  color: #000;\n\n  background-color: #ff8c00;\n\n  border: 1px solid #ff8c00;\n  border-radius: 8px;\n  transition: color 250ms cubic-bezier(0.445, 0.05, 0.55, 0.95);\n\n  padding: 10px 20px;\n\n  &:hover {\n    color: #fff;\n    background-color: #ff9933;\n  }\n`;\n\nconst AdditionalInfoListItem = styled.li``;\n\nexport {\n  LinkBtnBack,\n  ContainerInfo,\n  ImgPoster,\n  TitleMovie,\n  UserScore,\n  OverView,\n  OverViewParagraph,\n  Genres,\n  GenresList,\n  GenresListItem,\n  AdditionalInfo,\n  AdditionalInfoList,\n  AdditionalNavLink,\n  AdditionalInfoListItem,\n};\n","import { getMovieDetails } from 'helpers/API';\nimport { useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport {\n  LinkBtnBack,\n  ContainerInfo,\n  ImgPoster,\n  TitleMovie,\n  UserScore,\n  OverView,\n  OverViewParagraph,\n  Genres,\n  GenresList,\n  GenresListItem,\n  AdditionalInfo,\n  AdditionalInfoList,\n  AdditionalNavLink,\n  AdditionalInfoListItem,\n} from './MovieDetails.styled';\n\nimport NotFoundPage from './NotFoundPage';\n\nexport default function MovieDetails() {\n  const [aboutMovie, setAboutMovie] = useState(null);\n  const [isNotFound, setIsNotFound] = useState();\n\n  // ID GENRES\n  // const [genreId, setGenreId] = useState(null);\n\n  // console.log(genreId);\n  const params = useParams();\n\n  const localLocation = useLocation();\n  const backLinkLocationRef = useRef(localLocation.state?.from ?? `/`);\n\n  useEffect(() => {\n    if (!params.movieId) {\n      return;\n    }\n\n    const fetchMovieDetails = async () => {\n      try {\n        const detailInfo = await getMovieDetails(params.movieId);\n        setAboutMovie(detailInfo);\n      } catch (err) {\n        setIsNotFound(true);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [params.movieId]);\n\n  if (isNotFound) {\n    return <NotFoundPage />;\n  }\n\n  const handleIdClick = selectedId => {\n    // setGenreId(selectedId);\n  };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <LinkBtnBack to={backLinkLocationRef.current}>Back</LinkBtnBack>\n      {aboutMovie && (\n        <ContainerInfo>\n          <ImgPoster\n            src={`https://image.tmdb.org/t/p/w200${aboutMovie.poster_path}`}\n            alt=\"\"\n          />\n\n          <div>\n            <TitleMovie>\n              {aboutMovie.title ??\n                aboutMovie.original_name ??\n                aboutMovie.name ??\n                aboutMovie.original_title}\n            </TitleMovie>\n            <UserScore>\n              User Score: {Math.ceil(aboutMovie.vote_average * 10)}%\n            </UserScore>\n            <OverView>Overview</OverView>\n            <OverViewParagraph>\n              {aboutMovie.overview ?? 'No overview available'}\n            </OverViewParagraph>\n            <Genres>Genres</Genres>\n            <GenresList>\n              {aboutMovie.genres ? (\n                aboutMovie.genres.map(genre => {\n                  return (\n                    <GenresListItem key={genre.id}>\n                      <button\n                        key={genre.id}\n                        onClick={() => handleIdClick(genre.id)}\n                      >\n                        {genre.name}\n                      </button>\n                    </GenresListItem>\n                  );\n                })\n              ) : (\n                <li>No genres available</li>\n              )}\n            </GenresList>\n          </div>\n        </ContainerInfo>\n      )}\n      <AdditionalInfo>Additional informtaion</AdditionalInfo>\n      <div style={{ marginBottom: '20px' }}>\n        <AdditionalInfoList>\n          <AdditionalInfoListItem>\n            <AdditionalNavLink to={`/Movie/${params.movieId}/Cast`}>\n              Cast\n            </AdditionalNavLink>\n          </AdditionalInfoListItem>\n          <AdditionalInfoListItem>\n            <AdditionalNavLink to={`/Movie/${params.movieId}/Reviews`}>\n              Reviews\n            </AdditionalNavLink>\n          </AdditionalInfoListItem>\n        </AdditionalInfoList>\n      </div>\n      <Outlet />\n    </div>\n  );\n}\n","import { Link } from 'react-router-dom';\n\nexport default function NotFoundPage() {\n  return (\n    <div>\n      Not Faund Page! Please, return to &nbsp;<Link to=\"/\">Home page</Link>\n    </div>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '1313eb7d87ffc79c96ba5fefca3b8f25',\n};\n\nconst getMovieCredits = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?language=en-US`);\n\n  return response.data;\n};\n\nconst getMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?language=en-U`);\n\n  return response.data;\n};\n\nconst getMovieReviews = async (movieId, page = 1) => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?language=en-US&page=${page}`\n  );\n\n  return response.data;\n};\n\nconst getTrending = async () => {\n  const response = await axios.get(`trending/all/day?language=en-US`);\n\n  return response.data;\n};\n\nconst searchMovies = async (page = 1, query) => {\n  const response = await axios.get(\n    `search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`\n  );\n\n  return response.data;\n};\n\nconst getMovieGenres = async (genresID = 14, page = 1) => {\n  const response = await axios.get(\n    `discover/movie?with_genres=${genresID}&page=${page}`\n  );\n\n  return response.data;\n};\n\nexport {\n  getMovieCredits,\n  getMovieDetails,\n  getMovieReviews,\n  getTrending,\n  searchMovies,\n  getMovieGenres,\n};\n"],"names":["LinkBtnBack","styled","Link","ContainerInfo","ImgPoster","TitleMovie","UserScore","OverView","OverViewParagraph","Genres","GenresList","GenresListItem","AdditionalInfo","AdditionalInfoList","AdditionalNavLink","NavLink","AdditionalInfoListItem","MovieDetails","useState","aboutMovie","setAboutMovie","isNotFound","setIsNotFound","params","useParams","localLocation","useLocation","backLinkLocationRef","useRef","state","from","useEffect","movieId","fetchMovieDetails","getMovieDetails","detailInfo","NotFoundPage","style","padding","to","current","src","poster_path","alt","title","original_name","name","original_title","Math","ceil","vote_average","overview","genres","map","genre","onClick","id","marginBottom","axios","api_key","getMovieCredits","response","data","getMovieReviews","page","getTrending","searchMovies","query","getMovieGenres","genresID"],"sourceRoot":""}