{"version":3,"file":"static/js/493.668e58c8.chunk.js","mappings":"4MAGMA,EAAqBC,EAAAA,GAAAA,IAAH,0CAIlBC,EAASD,EAAAA,GAAAA,GAAH,+JAUNE,EAAcF,EAAAA,GAAAA,IAAH,4DAKXG,GAASH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,yd,kBCXG,SAASK,EAAT,GAAqC,IAAhBC,EAAe,EAAfA,YAC5BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACT,EAAD,WACE,SAACE,EAAD,UACGK,GACCA,EAAYG,KACV,YAOO,IANLC,EAMI,EANJA,GACAC,EAKI,EALJA,MACAC,EAII,EAJJA,eACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,KACAC,EACI,EADJA,YAEMC,EACJL,GAASC,GAAkBE,GAAQD,EACrC,OACE,yBACE,UAACV,EAAD,CAEEc,GAAE,iBAAYP,GACdQ,MAAO,CAAEC,KAAMZ,GAHjB,WAKE,SAACL,EAAD,CACEkB,IACEL,EAAW,yCAC2BA,GA9B5D,8EAiCoBM,IAAKL,IAGNA,IAbIN,IAFAA,EAmBZ,OAKZ,C,+IClDc,SAASY,IACtB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOjB,EAAP,KAAoBkB,EAApB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,GAA2B,IAAvBnB,EAAYoB,OAAhB,CAIA,IAAMC,EAAS,mCAAG,8GAEMC,EAAAA,EAAAA,MAFN,OAERC,EAFQ,OAIdL,EAAeK,EAAMC,SAJP,gDAMdC,QAAQC,IAAR,MANc,yDAAH,qDAUfL,GAZC,CAaF,GAAE,CAACrB,KAGF,4BACE,eAAI2B,MAAO,CAAEC,UAAW,UAAxB,SAAoC,oBACpC,SAAC,IAAD,CAAW5B,YAAaA,MAG7B,C,uNC7BD6B,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGX,IAAMC,EAAe,mCAAG,WAAMC,GAAN,uFACCH,EAAAA,EAAAA,IAAA,gBAAmBG,EAAnB,4BADD,cAChBC,EADgB,yBAGfA,EAASC,MAHM,2CAAH,sDAMfC,EAAe,mCAAG,WAAMH,GAAN,uFACCH,EAAAA,EAAAA,IAAA,gBAAmBG,EAAnB,mBADD,cAChBC,EADgB,yBAGfA,EAASC,MAHM,2CAAH,sDAMfE,EAAe,mCAAG,WAAOJ,GAAP,4FAAgBK,EAAhB,+BAAuB,EAAvB,SACCR,EAAAA,EAAAA,IAAA,gBACZG,EADY,wCAC2BK,IAF5B,cAChBJ,EADgB,yBAKfA,EAASC,MALM,2CAAH,sDAQfZ,EAAW,mCAAG,oGACKO,EAAAA,EAAAA,IAAA,mCADL,cACZI,EADY,yBAGXA,EAASC,MAHE,2CAAH,qDAMXI,EAAY,mCAAG,2GAAOD,EAAP,+BAAc,EAAGE,EAAjB,gCACIV,EAAAA,EAAAA,IAAA,6BACCU,EADD,oDACkDF,IAFtD,cACbJ,EADa,yBAKZA,EAASC,MALG,2CAAH,qDAQZM,EAAc,mCAAG,2GAAOC,EAAP,+BAAkB,GAAIJ,EAAtB,+BAA6B,EAA7B,SACER,EAAAA,EAAAA,IAAA,qCACSY,EADT,iBAC0BJ,IAF5B,cACfJ,EADe,yBAKdA,EAASC,MALK,2CAAH,oD","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/pages/Home.jsx","helpers/API.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst ContainerListMovie = styled.div`\n  display: flex;\n`;\n\nconst ListUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  row-gap: 28px;\n  column-gap: 16px;\n  width: 1314px;\n  margin: 0 auto;\n  margin-top: 25px;\n`;\n\nconst PosterMovie = styled.img`\n  display: block;\n  width: 250px;\n`;\n\nconst LinkMy = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  row-gap: 8px;\n\n  padding: 12px;\n  width: 250px;\n  height: 406px;\n  border-radius: 8px;\n  border: solid 1px orange;\n\n  text-decoration: none;\n  color: black;\n\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nexport { ContainerListMovie, ListUl, PosterMovie, LinkMy };\n","import {\n  ContainerListMovie,\n  ListUl,\n  PosterMovie,\n  LinkMy,\n} from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nexport default function MovieList({ trendMovies }) {\n  const location = useLocation();\n\n  return (\n    <ContainerListMovie>\n      <ListUl>\n        {trendMovies &&\n          trendMovies.map(\n            ({\n              id,\n              title,\n              original_title,\n              original_name,\n              name,\n              poster_path,\n            }) => {\n              const displayTitle =\n                title || original_title || name || original_name;\n              return (\n                <li key={id}>\n                  <LinkMy\n                    key={id}\n                    to={`/Movie/${id}`}\n                    state={{ from: location }}\n                  >\n                    <PosterMovie\n                      src={\n                        poster_path\n                          ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                          : defaultImg\n                      }\n                      alt={displayTitle}\n                    />\n\n                    {displayTitle}\n                  </LinkMy>\n                </li>\n              );\n            }\n          )}\n      </ListUl>\n    </ContainerListMovie>\n  );\n}\n","import MovieList from 'components/MoviesList/MoviesList';\nimport { getTrending } from 'helpers/API';\nimport { useEffect, useState } from 'react';\n\nexport default function Home() {\n  const [trendMovies, setTrendMovies] = useState([]);\n\n  useEffect(() => {\n    if (trendMovies.length !== 0) {\n      return;\n    }\n\n    const fetchData = async () => {\n      try {\n        const trend = await getTrending();\n\n        setTrendMovies(trend.results);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, [trendMovies]);\n\n  return (\n    <div>\n      <h2 style={{ textAlign: 'center' }}>Trending today</h2>\n      <MovieList trendMovies={trendMovies} />\n    </div>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '1313eb7d87ffc79c96ba5fefca3b8f25',\n};\n\nconst getMovieCredits = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?language=en-US`);\n\n  return response.data;\n};\n\nconst getMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?language=en-U`);\n\n  return response.data;\n};\n\nconst getMovieReviews = async (movieId, page = 1) => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?language=en-US&page=${page}`\n  );\n\n  return response.data;\n};\n\nconst getTrending = async () => {\n  const response = await axios.get(`trending/all/day?language=en-US`);\n\n  return response.data;\n};\n\nconst searchMovies = async (page = 1, query) => {\n  const response = await axios.get(\n    `search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`\n  );\n\n  return response.data;\n};\n\nconst getMovieGenres = async (genresID = 14, page = 1) => {\n  const response = await axios.get(\n    `discover/movie?with_genres=${genresID}&page=${page}`\n  );\n\n  return response.data;\n};\n\nexport {\n  getMovieCredits,\n  getMovieDetails,\n  getMovieReviews,\n  getTrending,\n  searchMovies,\n  getMovieGenres,\n};\n"],"names":["ContainerListMovie","styled","ListUl","PosterMovie","LinkMy","Link","MovieList","trendMovies","location","useLocation","map","id","title","original_title","original_name","name","poster_path","displayTitle","to","state","from","src","alt","Home","useState","setTrendMovies","useEffect","length","fetchData","getTrending","trend","results","console","log","style","textAlign","axios","api_key","getMovieCredits","movieId","response","data","getMovieDetails","getMovieReviews","page","searchMovies","query","getMovieGenres","genresID"],"sourceRoot":""}