{"version":3,"file":"static/js/258.f45f6f51.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Person/Person.jsx","components/BackButton/Modal/Modal.jsx","components/Cast/Cast.jsx","helpers/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst ActorCard = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  row-gap: 32px;\n  column-gap: 16px;\n  padding: 20px;\n`;\n\nconst ActorContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  border-radius: 5%;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  cursor: pointer;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.2);\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nconst ActorImage = styled.img`\n  display: block;\n  width: 200px;\n\n  border-radius: 5%;\n  object-fit: cover;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nconst ActorInfoContainer = styled.div`\n  padding: 12px 8px;\n`;\n\nconst ActorName = styled.h3`\n  margin-bottom: 8px;\n  text-align: center;\n  font-size: 14px;\n  font-weight: bold;\n`;\n\nconst ActorCharacter = styled.p`\n  text-align: center;\n  font-size: 10px;\n  color: #888;\n`;\n\nexport {\n  ActorCard,\n  ActorContainer,\n  ActorImage,\n  ActorInfoContainer,\n  ActorName,\n  ActorCharacter,\n};\n","import { getDetailPerson } from 'helpers/API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Person = () => {\n  const [details, setDetails] = useState([]);\n  const params = useParams();\n  const idPerson = params.PersonId;\n\n  useEffect(() => {\n    const fetchPersonInfo = async () => {\n      try {\n        const detailsPers = await getDetailPerson(idPerson);\n\n        setDetails(detailsPers);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchPersonInfo();\n  }, [idPerson]);\n  const {\n    id,\n    biography,\n    // also_known_as,\n    birthday,\n    deathday,\n    gender,\n    known_for_department,\n    name,\n    place_of_birth,\n    profile_path,\n  } = details;\n\n  return (\n    <div key={id}>\n      <h2>{name}</h2>\n      <img src={`https://image.tmdb.org/t/p/w200${profile_path}`} alt={name} />\n      <h3>Biography</h3>\n      <p>{biography ? biography : '-'}</p>\n      <h3>Personal Information</h3>\n      <h4>Also Known As: </h4>\n      {/* <ul>\n        {also_known_as.map(known => {\n          return <li>{known}</li>;\n        })}\n      </ul> */}\n      <ul>\n        <li>\n          <strong>Birthday:</strong> {birthday ?? '-'}\n        </li>\n        <li>\n          <strong>Gender:</strong> {gender === 2 ? 'Male' : 'Female'}\n        </li>\n        <li>\n          <strong>Place of Birth:</strong> {place_of_birth ?? '-'}\n        </li>\n        <li>\n          <strong>Known for:</strong> {known_for_department}\n        </li>\n        <li>\n          <strong>Deathday:</strong> {deathday ?? '-'}\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport { Person };\n","import { Person } from 'components/Person/Person';\nimport Modal from 'react-modal';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nModal.setAppElement('#root');\n\nconst PersonModal = ({ modalIsOpen, closeModal }) => {\n  return (\n    <Modal\n      isOpen={modalIsOpen}\n      style={customStyles}\n      onRequestClose={closeModal}\n    >\n      <Person />\n    </Modal>\n  );\n};\n\nexport { PersonModal };\n","import { getMovieCredits } from 'helpers/API';\nimport { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport {\n  ActorCard,\n  ActorContainer,\n  ActorImage,\n  ActorInfoContainer,\n  ActorName,\n  ActorCharacter,\n} from './Cast.styled';\nimport { PersonModal } from 'components/BackButton/Modal/Modal';\n\n// import defaultPic from 'download.jpg';\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nexport default function Cast() {\n  const [aboutCasts, setAboutCasts] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n\n  const params = useParams();\n  // const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieCredits = async () => {\n      // setIsError(false);\n\n      try {\n        const infoCast = await getMovieCredits(params.movieId);\n        setAboutCasts(infoCast.cast);\n\n        // if (infoCast.cast.length === 0) {\n        //   setIsError(true);\n        // } else {\n        //   setAboutCasts(infoCast.cast);\n        // }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    if (params.movieId) {\n      fetchMovieCredits();\n    }\n  }, [params.movieId]);\n\n  const handleClickImg = persId => {\n    console.log(persId);\n  };\n\n  return (\n    <ActorCard>\n      {aboutCasts.map(({ id, profile_path, name, character }) => {\n        return (\n          <Link\n            key={id}\n            // to={`/Person/${id}`}\n            style={{ textDecoration: 'none' }}\n          >\n            <ActorContainer onClick={() => handleClickImg(id)} key={id}>\n              <ActorImage\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                    : defaultImg\n                }\n                alt={name}\n                onClick={() => setShowModal(true)}\n              />\n              <ActorInfoContainer>\n                <ActorName>{name}</ActorName>\n                <ActorCharacter>Character: {character}</ActorCharacter>\n              </ActorInfoContainer>\n            </ActorContainer>\n          </Link>\n        );\n      })}\n      {showModal && (\n        <PersonModal\n          modalIsOpen={showModal}\n          closeModal={() => setShowModal(false)}\n        ></PersonModal>\n      )}\n    </ActorCard>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '1313eb7d87ffc79c96ba5fefca3b8f25',\n};\n\nconst getMovieCredits = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?language=en-US`);\n\n  return response.data;\n};\n\nconst getMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?language=en-U`);\n\n  return response.data;\n};\n\nconst getMovieReviews = async (page = 1, movieId) => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?language=en-US&page=${page}`\n  );\n\n  return response.data;\n};\n\nconst getTrending = async page => {\n  const response = await axios.get(\n    `trending/all/day?language=en-US&page=${page}`\n  );\n\n  return response.data;\n};\n\nconst searchMovies = async (page = 1, query) => {\n  const response = await axios.get(\n    `search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`\n  );\n\n  return response.data;\n};\n\nconst getMovieGenres = async (page = 1, genresID = 14) => {\n  const response = await axios.get(\n    `discover/movie?with_genres=${genresID}&page=${page}`\n  );\n\n  return response.data;\n};\n\nconst getDetailPerson = async (idPerson = 2144) => {\n  const response = await axios.get(`person/${idPerson}?language=en-US`);\n\n  return response.data;\n};\n\nconst getTVCreditsPerson = async idPerson => {\n  const response = await axios.get(\n    `person/${idPerson}/tv_credits?language=en-US`\n  );\n\n  return response.data;\n};\n\nexport {\n  getMovieCredits,\n  getMovieDetails,\n  getMovieReviews,\n  getTrending,\n  searchMovies,\n  getMovieGenres,\n  getDetailPerson,\n  getTVCreditsPerson,\n};\n"],"names":["ActorCard","styled","ActorContainer","ActorImage","ActorInfoContainer","ActorName","ActorCharacter","Person","useState","details","setDetails","idPerson","useParams","PersonId","useEffect","fetchPersonInfo","getDetailPerson","detailsPers","console","log","id","biography","birthday","deathday","gender","known_for_department","name","place_of_birth","profile_path","src","alt","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","PersonModal","modalIsOpen","closeModal","isOpen","style","onRequestClose","Cast","aboutCasts","setAboutCasts","showModal","setShowModal","params","fetchMovieCredits","getMovieCredits","movieId","infoCast","cast","map","character","textDecoration","onClick","persId","axios","api_key","response","data","getMovieDetails","getMovieReviews","page","getTrending","searchMovies","query","getMovieGenres","genresID"],"sourceRoot":""}