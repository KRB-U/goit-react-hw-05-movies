{"version":3,"file":"static/js/7.3a77922c.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/pages/Movies.jsx","helpers/API.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst ContainerListMovie = styled.div`\n  display: flex;\n`;\n\nconst ListUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  row-gap: 28px;\n  column-gap: 16px;\n  width: 1314px;\n  margin: 0 auto;\n  margin-top: 25px;\n`;\n\nconst PosterMovie = styled.img`\n  display: block;\n  width: 250px;\n`;\n\nconst LinkMy = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  row-gap: 8px;\n\n  padding: 12px;\n  width: 250px;\n  height: 406px;\n  border-radius: 8px;\n  border: solid 1px orange;\n\n  text-decoration: none;\n  color: black;\n\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nexport { ContainerListMovie, ListUl, PosterMovie, LinkMy };\n","import {\n  ContainerListMovie,\n  ListUl,\n  PosterMovie,\n  LinkMy,\n} from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nexport default function MovieList({ trendMovies }) {\n  const location = useLocation();\n\n  return (\n    <ContainerListMovie>\n      <ListUl>\n        {trendMovies &&\n          trendMovies.map(\n            ({\n              id,\n              title,\n              original_title,\n              original_name,\n              name,\n              poster_path,\n            }) => {\n              const displayTitle =\n                title || original_title || name || original_name;\n              return (\n                <li key={id}>\n                  <LinkMy\n                    key={id}\n                    to={`/Movie/${id}`}\n                    state={{ from: location }}\n                  >\n                    <PosterMovie\n                      src={\n                        poster_path\n                          ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                          : defaultImg\n                      }\n                      alt={displayTitle}\n                    />\n\n                    {displayTitle}\n                  </LinkMy>\n                </li>\n              );\n            }\n          )}\n      </ListUl>\n    </ContainerListMovie>\n  );\n}\n","import MovieList from 'components/MoviesList/MoviesList';\nimport { searchMovies } from 'helpers/API';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  const [params, setParams] = useSearchParams();\n  const query = params.get('query') ?? '';\n\n  const [moviesData, setMoviesData] = useState([]);\n\n  const handleSubmitForm = evt => {\n    evt.preventDefault();\n    const inputValue = evt.target.elements.queryValueSearch.value;\n\n    params.set('query', inputValue);\n\n    setParams(params);\n  };\n\n  useEffect(() => {\n    if (!query) return;\n\n    const fetchedMovies = async () => {\n      try {\n        const fetchSearchMovie = await searchMovies(1, query);\n        setMoviesData(fetchSearchMovie.results);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchedMovies();\n  }, [query]);\n\n  return (\n    <div style={{ margin: '0 auto', textAlign: 'center' }}>\n      <form onSubmit={handleSubmitForm}>\n        <input\n          type=\"text\"\n          // value={query}\n          placeholder=\"Введіть пошуковий запит\"\n          name=\"queryValueSearch\"\n          // onChange={handleChange}\n          style={{ marginRight: '10px' }}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <MovieList trendMovies={moviesData} />\n    </div>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '1313eb7d87ffc79c96ba5fefca3b8f25',\n};\n\nconst getMovieCredits = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?language=en-US`);\n\n  return response.data;\n};\n\nconst getMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?language=en-U`);\n\n  return response.data;\n};\n\nconst getMovieReviews = async (movieId, page = 1) => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?language=en-US&page=${page}`\n  );\n\n  return response.data;\n};\n\nconst getTrending = async () => {\n  const response = await axios.get(`trending/all/day?language=en-US`);\n\n  return response.data;\n};\n\nconst searchMovies = async (page = 1, query) => {\n  const response = await axios.get(\n    `search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`\n  );\n\n  return response.data;\n};\n\nconst getMovieGenres = async (genresID = 14, page = 1) => {\n  const response = await axios.get(\n    `discover/movie?with_genres=${genresID}&page=${page}`\n  );\n\n  return response.data;\n};\n\nexport {\n  getMovieCredits,\n  getMovieDetails,\n  getMovieReviews,\n  getTrending,\n  searchMovies,\n  getMovieGenres,\n};\n"],"names":["ContainerListMovie","styled","ListUl","PosterMovie","LinkMy","Link","MovieList","trendMovies","location","useLocation","map","id","title","original_title","original_name","name","poster_path","displayTitle","to","state","from","src","alt","Movies","useSearchParams","params","setParams","query","get","useState","moviesData","setMoviesData","useEffect","fetchedMovies","searchMovies","fetchSearchMovie","results","console","log","style","margin","textAlign","onSubmit","evt","preventDefault","inputValue","target","elements","queryValueSearch","value","set","type","placeholder","marginRight","axios","api_key","getMovieCredits","movieId","response","data","getMovieDetails","getMovieReviews","page","getTrending","getMovieGenres","genresID"],"sourceRoot":""}